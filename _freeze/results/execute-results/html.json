{
  "hash": "b5b9fba3bb507867ef3ad2c69ecba3f7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Results & Performance Analysis\"\nauthor: \"Tam Le\"\ndate: today\nformat:\n  html:\n    code-fold: true\n    toc: true\n    theme: cosmo\n    execute:\n      eval: false\n      echo: true\njupyter: python3\n---\n\n## Project Results\n\nThis is a learning project that demonstrates end-to-end machine learning development.\n\n## What I Built\n\n**Machine Learning Model:**\n- CNN trained on PlantVillage potato disease dataset\n- Classifies images into 3 categories: Early Blight, Late Blight, Healthy\n- Built with TensorFlow/Keras\n\n**Backend API:**\n- FastAPI application that serves the model\n- Handles image upload and preprocessing\n- Returns predictions with confidence scores\n\n**Frontend Application:**\n- React app with Material-UI components\n- Drag-and-drop image upload interface\n- Displays classification results\n\n**Documentation:**\n- Professional documentation website built with Quarto\n- Demonstrates technical writing and documentation skills\n\n## Skills Demonstrated\n\n- **Machine Learning**: CNN training, image classification, TensorFlow\n- **Backend Development**: FastAPI, Python, API design\n- **Frontend Development**: React, Material-UI, JavaScript\n- **Documentation**: Quarto, Markdown, technical writing\n- **Project Organization**: Git, file structure, dependencies\n\n## Key Files\n\n**Training Code**: `training/training.ipynb` - Jupyter notebook with CNN training\n**API Code**: `api/main.py` - FastAPI backend serving the model  \n**Frontend**: `frontend/src/` - React application with image upload\n**Model**: `models/1/potatoes.h5` - Trained TensorFlow model\n\n## Technologies Used\n\n| Component | Technology | Purpose |\n|-----------|------------|---------|\n| Model Training | TensorFlow/Keras | CNN image classification |\n| Backend API | FastAPI | Serve model predictions |\n| Frontend | React + Material-UI | User interface |\n| Documentation | Quarto | Professional docs |\n| Data | PlantVillage Dataset | Potato disease images |\n\n## Learning Outcomes\n\nThis project helped me learn:\n\n- **CNN Architecture**: How to design and train convolutional neural networks\n- **Image Classification**: Working with image datasets and preprocessing\n- **API Development**: Building REST APIs with FastAPI\n- **React Development**: Creating user interfaces with modern web technologies\n- **Full-stack Integration**: Connecting ML models with web applications\n- **Documentation**: Professional project documentation with Quarto\n\n## Next Steps\n\nTo improve this project, I could:\n- Collect more diverse training data\n- Experiment with transfer learning\n- Add data augmentation techniques\n- Improve the frontend user experience\n- Deploy to cloud platforms\n\n",
    "supporting": [
      "results_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}